#!/bin/bash
DEVICE=munch
cd ..
MAIN=$PWD
cd kernel_xiaomi_munch
KERNEL_DIR=$PWD
ANYKERNEL_DIR=$KERNEL_DIR/AnyKernel3
CLANG_DIR=$MAIN/weebx-clang
DEFCONFIG=${DEVICE}_defconfig
KERNELVER=$(make kernelversion)

if [[ -z "${JTHREAD}" ]]; then
    COUNT="$(grep -c '^processor' /proc/cpuinfo)"
    export JTHREAD="$((COUNT + 2))"
fi

echo "cleaning..."
rm -rf out/
mkdir -p out
clear
BUILD_START=$(date +"%s")
DATE_CLOCK=$(date +'%H%M-%d%m%Y')

export PATH="$CLANG_DIR/bin:${PATH}"

make O=out ARCH=arm64 $DEFCONFIG \
    ARCH=arm64 \
    LLVM=1 \
    LLVM_IAS=1 \
    CROSS_COMPILE=aarch64-linux-gnu- \
    CROSS_COMPILE_ARM32=arm-linux-gnueabi-
    
make O=out \
    ARCH=arm64 \
    LLVM=1 \
    LLVM_IAS=1 \
    CROSS_COMPILE=aarch64-linux-gnu- \
    CLANG_TRIPLE=aarch64-linux-gnu- \
    CROSS_COMPILE_ARM32=arm-linux-gnueabi- \
    -j${JTHREAD}

if [[ -f $KERNEL_DIR/out/arch/arm64/boot/Image ]]; then

 mv $KERNEL_DIR/out/arch/arm64/boot/Image $ANYKERNEL_DIR/Image.gz-dtb
 cd $ANYKERNEL_DIR
 echo ""
 echo "zipping"
 ZIPNAME=$KERNELVER-Oxygen+-$DATE_CLOCK.zip
 zip -r9 $ZIPNAME META-INF ramdisk tools anykernel.sh banner Image.gz-dtb dtbo.img
 mv $ZIPNAME $KERNEL_DIR/
 echo ""

 echo "Cleaning AnyKernel3 dir"
 echo ""
 rm -rf $ANYKERNEL_DIR/*.zip
 rm -rf $ANYKERNEL_DIR/Image.gz-dtb
 echo "**** build done! ****"
 echo ""
 echo "Your kernel zip name is $ZIPNAME"
 echo ""
 BUILD_END=$(date +"%s")
 DIFF=$(($BUILD_END - $BUILD_START))
 echo -e "Build completed in '$(($DIFF / 60))' minute(s) and '$(($DIFF % 60))' seconds"
else
 echo " Kernel build failed! abort zipping..."
fi

rm -rf $KERNEL_DIR/out/